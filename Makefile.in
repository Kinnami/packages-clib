################################################################
# Makefile template for SWI-Prolog CLIB package
#
# This template is used by configure to create Makefile.  See
# the file INSTALL for further installation instructions.
#
# License: LGPL
#
# Author: Jan Wielemaker (wielemak@science.uva.nl)
################################################################

.SUFFIXES: .tex .dvi .doc .pl

PL=@PL@
PLBASE=@PLBASE@
PLARCH=@PLARCH@
PLINCL=@PLINCL@
PKGDOC=$(PLBASE)/doc/packages
PCEHOME=../xpce
DESTDIR=

CC=@CC@
COFLAGS=@COFLAGS@
CWFLAGS=@CWFLAGS@
CMFLAGS=@CMFLAGS@
CIFLAGS=-I. -Imaildrop/rfc2045 -Imaildrop/rfc822
CFLAGS=$(COFLAGS) $(CWFLAGS) $(CMFLAGS) $(CIFLAGS) @DEFS@
LIBS=@LIBS@
NETLIBS=@NETLIBS@
CRYPTLIBS=@CRYPTLIBS@
MIMELIBS=maildrop/rfc2045/librfc2045.a maildrop/rfc822/librfc822.a 

DOCTOTEX=$(PCEHOME)/bin/doc2tex
PLTOTEX=$(PCEHOME)/bin/pl2tex
DOC=clib
TEX=$(DOC).tex
DVI=$(DOC).dvi
PDF=$(DOC).pdf
RUNTEX=../../man/runtex

LD=@LD@
LDFLAGS=@LDSOFLAGS@

INSTALL=@INSTALL@
INSTALL_PROGRAM=@INSTALL_PROGRAM@
INSTALL_DATA=@INSTALL_DATA@

LIBPL=		@PLTARGETS@ prolog_server.pl
TARGETS=	@TARGETS@ readutil.@SO@

UNXOBJ=		error.o process.o
SOCKOBJ=	error.o socket.o nonblockio.o
CGIOBJ=		error.o form.o cgi.o
CRYPTOBJ=	error.o crypt.o
MEMOBJ=		error.o memfile.o
MIMEOBJ=	error.o mime.o
TIMEOBJ=	error.o time.o
FILESOBJ=	error.o files.o
RLIMITOBJ=	error.o rlimit.o
RANDOMOBJ=	random.o
READUTILOBJ=	readutil.o

all:		$(TARGETS)

random.@SO@:	$(RANDOMOBJ)
		$(LD) $(LDFLAGS) -o $@ $(RANDOMOBJ)
unix.@SO@:	$(UNXOBJ)
		$(LD) $(LDFLAGS) -o $@ $(UNXOBJ)
socket.@SO@:	$(SOCKOBJ)
		$(LD) $(LDFLAGS) -o $@ $(SOCKOBJ) $(NETLIBS)
cgi.@SO@:	$(CGIOBJ)
		$(LD) $(LDFLAGS) -o $@ $(CGIOBJ)
crypt.@SO@:	$(CRYPTOBJ)
		$(LD) $(LDFLAGS) -o $@ $(CRYPTOBJ) $(CRYPTLIBS)
memfile.@SO@:	$(MEMOBJ)
		$(LD) $(LDFLAGS) -o $@ $(MEMOBJ) $(LIBS)
mime.@SO@:	$(MIMEOBJ) $(MIMELIBS)
		$(LD) $(LDFLAGS) -o $@ $(MIMEOBJ) $(MIMELIBS)
time.@SO@:	$(TIMEOBJ)
		$(LD) $(LDFLAGS) -o $@ $(TIMEOBJ) $(LIBS)
files.@SO@:	$(FILESOBJ)
		$(LD) $(LDFLAGS) -o $@ $(FILESOBJ) $(LIBS)
rlimit.@SO@:	$(RLIMITOBJ)
		$(LD) $(LDFLAGS) -o $@ $(RLIMITOBJ) $(LIBS)
readutil.@SO@:	$(READUTILOBJ)
		$(LD) $(LDFLAGS) -o $@ $(READUTILOBJ)

maildrop/rfc822/librfc822.a:
		(cd maildrop/rfc822 && $(MAKE))
maildrop/rfc2045/librfc2045.a:
		(cd maildrop/rfc2045 && $(MAKE))


install:	$(TARGETS) $(LIBPL)
		mkdir -p $(DESTDIR)$(PLBASE)/lib/$(PLARCH)
		for f in $(TARGETS); do \
		  $(INSTALL_PROGRAM) $$f $(DESTDIR)$(PLBASE)/lib/$(PLARCH); \
		done
		mkdir -p $(DESTDIR)$(PLBASE)/library
		for f in $(LIBPL); do \
		  $(INSTALL_DATA) $$f $(DESTDIR)$(PLBASE)/library; \
		done
		$(PL) -f none -g make -t halt

ln-install::
		@$(MAKE) INSTALL_DATA='../ln-install' install

rpm-install:	install

html-install::
		mkdir -p $(DESTDIR)$(PKGDOC)
		$(INSTALL) -m 644 clib.html $(DESTDIR)$(PKGDOC)

pdf-install::
		mkdir -p $(DESTDIR)$(PKGDOC)
		$(INSTALL) -m 644 clib.pdf $(DESTDIR)$(PKGDOC)

uninstall::
		(cd $(PLBASE)/lib/$(PLARCH) && rm -f $(TARGETS))
		(cd $(PLBASE)/library && rm -f $(LIBPL))
		$(PL) -f none -g make -t halt

################################################################
# Testing
################################################################

check:		check-socket check-memfile

torture:	torture-socket

check-socket::
		$(PL) -q -f testsocket.pl -F none -g tcp_test,halt -t 'halt(1)'

torture-socket::
		$(PL) -q -f stresssocket.pl -F none -g test,halt -t 'halt(1)'

check-memfile::
		$(PL) -q -f testmemfile.pl -F none -g test,halt -t 'halt(1)'


################################################################
# Documentation
################################################################

pdf:		$(PDF)

$(DVI):		$(TEX)
		$(RUNTEX) $(DOC)

$(PDF):		$(TEX)
		$(RUNTEX) --pdf $(DOC)

html:		$(TEX)
		latex2html $(DOC)
		mv html/index.html clib.html
		rm -r html

$(TEX):		$(DOCTOTEX)

.doc.tex:
		$(DOCTOTEX) $*.doc > $*.tex
.pl.tex:
		$(PLTOTEX) $*.pl > $*.tex

################################################################
# Clean
################################################################

clean:
		rm -f $(OBJ) *~ *.o *% a.out core config.log
		-(cd maildrop/rfc822 && $(MAKE) clean)
		-(cd maildrop/rfc2045 && $(MAKE) clean)

distclean:	clean
		rm -f $(TARGETS) config.cache config.h config.status Makefile
		rm -f clib.aux clib.log clib.out clib.toc
		rm -rf html
		-(cd maildrop/rfc822 && $(MAKE) distclean)
		-(cd maildrop/rfc2045 && $(MAKE) distclean)
